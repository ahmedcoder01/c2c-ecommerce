{
  "swagger": "2.0",
  "info": {
    "description": "E-Commerce API",
    "version": "1.0.0",
    "title": "E-Commerce API",
    "basePath": "/v1",

    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "basePath": "/v1",
  "schemes": ["http"],
  "produces": ["application/json"],
  "consumes": ["application/json"],

  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login a user",
        "description": "Login a user",
        "operationId": "loginUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be logged in",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "401": {
            "description": "Invalid name/password supplied",
            "schema": {
              "$ref": "#/definitions/GenericErrorModel"
            }
          }
        }
      }
    },

    "/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "Create a new user",
        "description": "Create a new user",
        "operationId": "createUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],

        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "409": {
            "description": "Email already exists"
          }
        }
      }
    },

    "/auth/refresh": {
      "get": {
        "tags": ["Auth"],
        "summary": "Refresh token",
        "description": "Refresh token",

        "operationId": "refreshToken",
        "produces": ["text/plain"],

        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Invalid token supplied",
            "schema": {
              "$ref": "#/definitions/GenericErrorModel"
            }
          }
        }
      }
    },

    "/auth/me": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "description": "Get current user",
        "operationId": "getCurrentUser",
        "produces": ["application/json"],

        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "404": {
            "description": "User not logged in",
            "schema": {
              "$ref": "#/definitions/GenericErrorModel"
            }
          },
          "401": {
            "description": "Invalid token supplied",
            "schema": {
              "$ref": "#/definitions/GenericErrorModel"
            }
          }
        }
      }
    },

    "/shipping/addresses": {
      "get": {
        "tags": ["Shipping"],
        "summary": "Get shipping addresses",
        "description": "Get shipping addresses",
        "operationId": "getShippingAddresses",
        "produces": ["application/json"],

        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },

      "post": {
        "tags": ["Shipping"],
        "summary": "Add shipping address",
        "description": "Add shipping address",
        "operationId": "addShippingAddress",
        "consumes": ["application/json"],
        "produces": ["application/json"],

        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Shipping address object that needs to be added",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "isDefault": {
                  "type": "boolean"
                }
              }
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/shipping/addresses/{shippingAddressId}": {
      "put": {
        "tags": ["Shipping"],
        "summary": "Update shipping address",
        "description": "Update shipping address",
        "operationId": "updateShippingAddress",
        "consumes": ["application/json"],
        "produces": ["application/json"],

        "parameters": [
          {
            "name": "shippingAddressId",
            "in": "path",
            "description": "ID of shipping address to update",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Shipping address object that needs to be updated",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "isDefault": {
                  "type": "boolean"
                }
              }
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },

      "delete": {
        "tags": ["Shipping"],
        "summary": "Delete shipping address",
        "description": "Delete shipping address",
        "operationId": "deleteShippingAddress",
        "produces": ["application/json"],

        "parameters": [
          {
            "name": "shippingAddressId",
            "in": "path",
            "description": "ID of shipping address to delete",
            "required": true,
            "type": "integer"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      },

      "get": {
        "tags": ["Shipping"],
        "summary": "Get shipping address",
        "description": "Get shipping address",
        "operationId": "getShippingAddress",
        "produces": ["application/json"],

        "parameters": [
          {
            "name": "shippingAddressId",
            "in": "path",
            "description": "ID of shipping address to get",
            "required": true,
            "type": "integer"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },

    "/cart": {
      "get": {
        "tags": ["Cart"],
        "summary": "Get cart",
        "description": "Get cart",
        "operationId": "getCart",
        "produces": ["application/json"],

        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },

    "/cart/add": {
      "post": {
        "tags": ["Cart"],
        "summary": "Add to cart",
        "description": "Add to cart",
        "operationId": "addToCart",
        "consumes": ["application/json"],
        "produces": ["application/json"],

        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Product object that needs to be added to cart",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "productVariantId": {
                  "type": "integer"
                },
                "quantity": {
                  "type": "integer"
                }
              }
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },

    "/cart/{cartItemId}": {
      "delete": {
        "tags": ["Cart"],
        "summary": "Delete cart item",
        "description": "Delete cart item",
        "operationId": "deleteCartItem",
        "produces": ["application/json"],

        "parameters": [
          {
            "name": "cartItemId",
            "in": "path",
            "description": "ID of cart item to delete",
            "required": true,
            "type": "integer"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },

    "/checkout": {
      "post": {
        "tags": ["Orders"],
        "summary": "Checkout",
        "description": "Checkout",
        "operationId": "checkout",
        "consumes": ["application/json"],
        "produces": ["application/json"],

        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Checkout object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "shippingAddressId": {
                  "type": "number"
                }
              }
            }
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },

    "/orders": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get orders",
        "description": "Get orders",
        "operationId": "getOrders",
        "produces": ["application/json"],

        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },

    "/orders/{orderId}/complete": {
      "post": {
        "tags": ["Orders"],
        "summary": "Mark order as delivered and complete it ",
        "description": "Complete order after delivery ",
        "operationId": "completeOrder",
        "consumes": ["application/json"],
        "produces": ["application/json"],

        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "ID of order to complete",
            "required": true,
            "type": "number"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "LoginUser": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        }
      },
      "required": ["email", "password"]
    },
    "LoginUserRequest": {
      "type": "object",

      "$ref": "#/definitions/LoginUser",
      "required": ["user"]
    },
    "NewUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        }
      },
      "required": ["name", "email", "password"]
    },
    "NewUserRequest": {
      "type": "object",
      "$ref": "#/definitions/NewUser",
      "required": ["user"]
    },
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "sellerProfile": {
          "$ref": "#/definitions/SellerProfile"
        }
      },
      "required": ["email", "token", "name", "image"]
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/User"
        }
      },
      "required": ["user"]
    },

    "GenericErrorModel": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      },
      "required": ["errors"]
    },

    "SellerProfile": {
      "type": "object",

      "properties": {
        "id": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "isActivated": {
          "type": "boolean"
        },

        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      }
    }
  }
}
